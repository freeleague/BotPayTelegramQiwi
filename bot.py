import telebot
import requests
import json
import sqlite3
from telebot import types
from random import randint
from config import token,otvetstart,idadmin,qiwinumber,token_qiwi,cena,oplatil,neoplatil


bot=telebot.TeleBot(token)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, otvetstart, reply_markup=btns())






@bot.message_handler(content_types="text")
def smsmms(message):
    if message.text == "–ö—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø":
        con = sqlite3.connect("data.db")
        cur = con.cursor()
        comment = randint(10000, 9999999)
        cur.execute(f"INSERT INTO oplata (id, code) VALUES({message.chat.id}, {comment})")
        con.commit()
        markup_inline = types.InlineKeyboardMarkup()
        proverka = types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É' ,callback_data='prov')
        otm = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞' ,callback_data='ottm')
        markup_inline.add(proverka)
        markup_inline.add(otm)
        bot.send_message(message.from_user.id,f'‚ôªÔ∏è–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ {cena}‚ÇΩ –Ω–∞ —Å—á–µ—Ç Qiwi\n\n–ù–æ–º–µ—Ä: `{qiwinumber}`\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π `{comment}` \n \n–ë—ã—Å—Ç—Ä–∞—è —Ñ–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã: [–û–ü–õ–ê–¢–ê](https://qiwi.com/payment/form/99?extra%5B%27account%27%5D={qiwinumber}&amountInteger={cena}&amountFraction=0&currency=643&extra%5B%27comment%27%5D={comment})\n\n_–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–æ–º–µ—Ä –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —á—Ç–æ–±—ã –∏—Ö —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å_',
		                 parse_mode='Markdown',reply_markup=markup_inline)
    else:
        bot.send_message(message.from_user.id,"–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∫—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø –¥–ª—è –ø–æ–∫—É–ø–∫–∏.")

        

        



@bot.callback_query_handler(func=lambda call:True)
def answer(call):
    
    con = sqlite3.connect("data.db")
    cur = con.cursor()
    if call.data == 'prov':
        
        user_id = call.message.chat.id
        QIWI_TOKEN = token_qiwi
        QIWI_ACCOUNT = str(qiwinumber)
        s = requests.Session()
        s.headers['authorization'] = 'Bearer ' + QIWI_TOKEN
        parameters = {'rows': '50'}
        h = s.get('https://edge.qiwi.com/payment-history/v1/persons/' + QIWI_ACCOUNT + '/payments',params=parameters)
        req = json.loads(h.text)
        try:
            
            cur.execute(f"SELECT * FROM oplata WHERE id = {user_id}")
            result = cur.fetchone()
            comment = str(result[1])
            
            for x in range(len(req['data'])):
                if req['data'][x]['comment'] == comment:
                    cena = (req['data'][x]['sum']['amount'])
                    cur.execute(f"DELETE FROM oplata WHERE id = {user_id}")
                    con.commit()

                    bot.send_message(idadmin,f"üí∏–£—Å–ø–µ—à–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µüí∏")
                    bot.send_message(call.message.chat.id,oplatil)

                    
                    break
                else:
                    
                    bot.send_message(call.message.chat.id,neoplatil)
                    
                    break


        except:
            pass

    elif call.data == 'ottm':
        bot.send_message(call.message.chat.id,"–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω")
        cur.execute(f"DELETE FROM oplata WHERE id = {call.message.chat.id}")
        con.commit()

        
    else:
        pass

def btns():
    markup = types.ReplyKeyboardMarkup(True)
    key1 = types.KeyboardButton("–ö—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø")
    markup.add(key1)

    return markup


if __name__ == '__main__':
    bot.polling(none_stop=True)